1)Decir cuál es el método de pago que más se usa cuándo un cliente pide un producto gaseosa que tiene un insumo gaseosa
el cual es proveido por Postobon.

SELECT MP.Nombre_metodo, Pr.Nombre_producto
FROM Metodo_pago MP INNER JOIN Factura F ON MP.Id_metodo_pago = F.Id_metodo_pago
INNER JOIN Producto_Pedido PP ON F.Id_pedido = PP.Id_pedido
INNER JOIN Producto Pr ON PP.Id_producto = Pr.Id_producto
WHERE Pr.Nombre_producto in(SELECT Pr.Nombre_producto
FROM Producto Pr INNER JOIN Producto_Insumo PRI ON Pr.Id_producto = PRI.Id_producto
INNER JOIN Insumo I ON PRI.Id_insumo = I.Id_insumo
WHERE Pr.Nombre_producto = 'Gaseosa' AND I.Nombre_insumo in(
SELECT I.Nombre_insumo
FROM Insumo I INNER JOIN Insumo_Proveedor IP ON I.Id_insumo = IP.Id_insumo
INNER JOIN Proveedor Pro ON IP.Id_proveedor = Pro.Id_proveedor
WHERE I.Nombre_insumo = 'gaseosa' AND Pro.Nombre_proveedor in(
SELECT Pro.Nombre_proveedor
FROM Proveedor Pro 
GROUP BY Pro.Id_proveedor
HAVING Pro.Nombre_proveedor = 'Postobon')))  Group by MP.Id_metodo_pago
having COUNT(*) =(SELECT count(MP.Id_metodo_pago)
FROM Metodo_pago MP INNER JOIN Factura F ON MP.Id_metodo_pago = F.Id_metodo_pago
INNER JOIN Producto_Pedido PP ON F.Id_pedido = PP.Id_pedido
INNER JOIN Producto Pr ON PP.Id_producto = Pr.Id_producto
INNER JOIN Producto_Insumo PRI ON Pr.Id_producto = PRI.Id_producto
INNER JOIN Insumo I ON PRI.Id_insumo = I.Id_insumo
INNER JOIN Insumo_Proveedor IP ON I.Id_insumo = IP.Id_insumo
INNER JOIN Proveedor Pro ON IP.Id_proveedor = Pro.Id_proveedor
WHERE I.Nombre_insumo = 'gaseosa' AND Pro.Nombre_proveedor = 'Postobon'
group by MP.Id_metodo_pago limit 1);

Por oscar_the_best

2)Buscar las quejas de los clientes cuya cantidad de producto-pedido sea 2 o mas, además es tipo comida rápida, cuyo insumo sea 
salchicha, además, mostrar el nombre del cliente que realizó la queja.

SELECT Q.Id_queja_reclamo, Q.Descripcion,I.Nombre_insumo, PP.Cantidad, CONCAT(C.Nombre_cliente,' ',C.Apellidos_cliente) Nombre
FROM Queja_Reclamos Q INNER JOIN Producto_Pedido PP ON Q.Id_pedido = PP.Id_pedido AND Q.Id_producto = PP.Id_producto
INNER JOIN Pedido P ON PP.Id_pedido = P.Id_pedido
INNER JOIN Cliente C ON P.Id_cliente = C.Id_cliente
INNER JOIN Producto PR ON PP.Id_producto = PR.Id_producto
INNER JOIN Tipo_producto TP ON PR.Id_tipo_producto = TP.Id_tipo_producto
INNER JOIN Producto_Insumo PRI ON PR.Id_producto = PRI.Id_producto
INNER JOIN Insumo I ON PRI.Id_insumo = I.Id_insumo
WHERE PP.cantidad in(SELECT PP.cantidad
FROM Producto_Pedido PP INNER JOIN Producto PR ON PP.Id_producto = PR.Id_producto
INNER JOIN Tipo_producto TP ON PR.Id_tipo_producto = TP.Id_tipo_producto
WHERE PP.cantidad >2 AND TP.Nombre_tipo_producto in
(SELECT TP.Nombre_tipo_producto
FROM Tipo_producto TP INNER JOIN Producto PR ON TP.Id_tipo_producto = PR.Id_tipo_producto
INNER JOIN Producto_Insumo PRI ON PR.Id_producto = PRI.Id_producto
INNER JOIN Insumo I ON PRI.Id_insumo = I.Id_insumo
WHERE TP.Nombre_tipo_producto = 'Comidas Rapidas' )) AND I.Nombre_insumo in
(SELECT I.Nombre_insumo
FROM Insumo I 
group by I.Id_insumo
having I.Nombre_insumo = 'salchichas');

By: Oscar_the_best

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
3) version 1.0 ( concatenar el nombre completo de el mesero que comienze con 'J', y concatenar el nombre completo de los clientes
mostrar su fecha de ingreso en cada mesa, su orden (numero) de pedido, mostrar los productos que pidio y el valor de cada producto.
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

select concat(E.Nombre_Empleado,' ',E.Apellido) Nombre_Empleado, C.Nombre_Cargo, P.Nombre_producto,
P.Precio,R.nombre_Restaurante,PE.Numero_pedido, concat(CL.Nombre_cliente,' ',CL.Apellidos_cliente) NOMBRE_CLIENTE,
MCL.fecha_uso, ME.Numero_mesa
from cargo C right outer join Empleado E on C.Id_Cargo = E.Id_Cargo right outer join
Restaurante R on R.Id_Restaurante = E.Id_Restaurante right outer join producto P on
R.Id_Restaurante=P.Id_Restaurante inner join Producto_Pedido PRP on P.Id_producto = PRP.Id_producto

inner join Pedido PE on PRP.Id_pedido = PE.Id_pedido inner join cliente CL on PE.Id_cliente = CL.Id_cliente
inner join Mesa_Cliente MCL on CL.Id_cliente = MCL.Id_cliente inner join Mesa ME on MCL.Id_mesa = ME.Id_mesa
where C.nombre_cargo = 'mesero' and Nombre_Empleado like 'L%' order by PE.Numero_pedido desc ,
ME.Numero_mesa desc ;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
v 2.0 lo mismo de la version 1.0 pero sumando el valor de los productos por orden de pedido.
SELECT Numero_pedido, sum(precio) precio_por_pedido FROM Pedido , producto  group by Numero_pedido;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
BY: Bryan
4)
 select DISTINCT E.Id_Empleado, concat(E.Nombre_Empleado,' ',E.Apellido) Nombre_Empleado, C.Nombre_Cargo,E.salario,
 INS.Precio_insumo,INS.Nombre_insumo, INS.Id_insumo, P.Nombre_producto,
 PRO.Nombre_proveedor
 from cargo C inner join Empleado E on C.Id_Cargo = E.Id_Cargo inner join
 Restaurante R on R.Id_Restaurante = E.Id_Restaurante inner join producto P on
 R.Id_Restaurante=P.Id_Restaurante inner join Producto_Insumo PRI on P.Id_producto = PRI.Id_producto inner join
 insumo INS on PRI.Id_insumo = INS.Id_insumo inner join Insumo_Proveedor INSPRO on INS.Id_insumo = INSPRO.Id_insumo 
 inner join Proveedor PRO on INSPRO.Id_Proveedor = PRO.Id_Proveedor
 where E.salario in (SELECT C.id_Cargo, sum(E.salario) total_salario_por_cargo FROM cargo , Empleado
group by C.id_Cargo) ;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
el gasto realizado y el ingreso recibido en todos los pedidos hechos por todos los clientes de menos de 11 productos
que hayan hecho un pedido entre las 12 y las 6 de la tarde el entre el 28 y el 30 de Septiembre de 2017,
mostrar el cliente, el pedido, ingresos y gastos ordenando los clientes alfabeticamente;


select cl.nombre_cliente, pe.Numero_pedido,sum(prpe.cantidad * pr.precio) ingreso, sum(inpr.cantidad * ins.precio_insumo) gasto
from cliente cl left outer join Pedido pe on cl.id_cliente=pe.id_cliente 
and pe.id_cliente in(select pe.id_cliente from pedido pe 
where date(pe.fecha) between '2017-09-28' and '2017-09-30' and time(pe.fecha) between '12:00:00' and '18:00:00')
left outer join producto_pedido prpe on prpe.id_pedido=pe.id_pedido
left outer join producto pr on pr.id_producto=prpe.id_producto
left outer join producto_insumo inpr on pr.id_producto=inpr.id_producto
left outer join insumo ins on ins.id_insumo=inpr.id_insumo
group by pe.numero_pedido having sum(prpe.cantidad)<11  and pe.numero_pedido is not null
order by cl.nombre_cliente;

by Carlos

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

listar todos los clientes que hayan consumido cualquier producto hecho con salchichas dadas por zenu 
en cualquier dia entre el 15 y el 30 de septiembre en una fecha determinada

select pr.nombre_producto, prov.Nombre_proveedor, pe.fecha as 'fecha de consumo', cl.nombre_cliente
from proveedor prov inner join Insumo_Proveedor provin on prov.id_proveedor=provin.id_proveedor
inner join insumo ins on provin.id_insumo=ins.id_insumo
inner join producto_insumo prodin on ins.id_insumo=prodin.id_insumo
inner join producto pr on prodin.id_producto = pr.id_producto
inner join producto_pedido prodped on pr.id_producto=prodped.id_producto
inner join pedido pe on pe.id_pedido=prodped.id_pedido
inner join cliente cl on pe.id_cliente=cl.id_cliente
where provin.id_proveedor in
(select prov.id_proveedor from Proveedor prov where prov.Nombre_proveedor like 'zenu')
and prodin.id_insumo in
(select ins.id_insumo from insumo ins where ins.Nombre_insumo like 'salch%')
and prodped.id_pedido in
(select pe.id_pedido from Pedido pe where date(pe.fecha) between '2017-09-15' and '2017-09-30');

by Carlos
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Robinson
1)Contar la cantidad de clientes que hay por la ubicacion de cada mesa junto con la cantidad de hombres y mujeres pero solo
mostrar aquellas ubicaciones en donde la cantidad de clientes supera a la media de clientes por ubicacion.

SELECT M.Ubicacion, CL.Genero,
	(
		SELECT COUNT(SBMC.Id_cliente) PERSONAS FROM Mesa_Cliente SBMC
		WHERE 
			  SBMC.Id_mesa = M.Id_mesa
		GROUP BY M.Ubicacion
	) PERSONAS,
	(
		SELECT COUNT(MC.Id_cliente) from Mesa_Cliente MC INNER JOIN cliente C on MC.Id_cliente = C.Id_cliente
		WHERE 
		C.Genero = CL.Genero AND
		MC.Id_mesa = M.Id_mesa
		GROUP BY M.Ubicacion

	) PERSONAS_GENERO,
		(
		SELECT SUM(F.Precio_total) from Mesa_Cliente MC INNER JOIN cliente C on MC.Id_cliente = C.Id_cliente
		INNER JOIN Factura F ON F.Id_cliente = MC.Id_cliente
		WHERE 
		C.Genero = CL.Genero AND
		MC.Id_mesa = M.Id_mesa AND
		F.Id_cliente = MC.Id_cliente
		GROUP BY M.Ubicacion

	) Cantida_Pagada_Genero

    FROM Mesa_Cliente MC RIGHT OUTER JOIN Mesa M ON MC.Id_mesa = M.Id_mesa  INNER JOIN Cliente CL ON
	MC.Id_cliente = CL.Id_cliente

	GROUP BY M.Ubicacion,CL.Genero having PERSONAS >(
							SELECT AVG(PERSONAS) MEDIA 
							FROM (
								SELECT M.Ubicacion, COUNT(MC.Id_cliente) PERSONAS FROM Mesa_Cliente MC RIGHT OUTER JOIN Mesa M
								ON MC.Id_mesa = M.Id_mesa INNER JOIN Cliente CL ON MC.Id_cliente = CL.Id_cliente
								GROUP BY M.Ubicacion

							) as PERSONAS_MESA
						)
;

2)

















